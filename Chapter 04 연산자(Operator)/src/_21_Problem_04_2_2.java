public class _21_Problem_04_2_2 {

	public static void main(String[] args) {
		System.out.println("문제 4-2 [비트 연산자 그리고 비트 쉬프트 연산자]");
		System.out.println("문제 2)");
		
		int num = 15678;
		System.out.println( (num >> 2) & 1);
		System.out.println( (num >> 4) & 1);
	}

}

/*   
답안 해설
이 문제의 해결방식은 하나가 아니므로, 여러분은 필자와 다른 방식으로 문제를 해결했을 수도 있다.
그러나 필자의 구현방식도 이해하고 있을 필요는 있다. 다음은 이 문제의 해결을 위한 필자의 답안이다.

위 예제에서 15678로 초기화 된 변수 num의 비트 열은 다음과 같다.

   00000000 00000000 00111101 00111110
   
이러한 변수 num의 비트 열을 오른쪽으로 2칸씩 이동시키면, 변수 num의 세 번째 비트가(오른쪽 끝에서부터 세 번째)
오른쪽 끝으로 이동하게 된다. 즉 num >> 2의 연산결과는 다음과 같다.

   00000000 00000000 00001111 01001111
   
바로 이 연산결과와 int형 정수 1과의 & 연산을 통해서 15678로 초기화 된 변수 num의 오른쪽 세 번째 비트를 확인할 수 있다.
오른쪽 세 번째 비트가 1이라면 연산의 결과도 1이고, 0이라면 연산의 결과도 0이다. 그리고 15678의 다섯 번째 비트를 확인하기
위해서는 변수 num에 저장된 비트의 열을 4칸씩 이동시켜서 지금 설명한 일련의 연산 과정을 그대로 거치면 된다.
*/