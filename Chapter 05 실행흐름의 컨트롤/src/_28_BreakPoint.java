public class _28_BreakPoint {

	public static void main(String[] args) {
		for (int i = 1; i < 10; i++) {
			for (int j = 1; j < 10; j++) {
				System.out.println("[" + i + ", " + j + "]");
				if (i % 2 == 0 && j % 2 == 0)
					break;
			}
		}
	}

}

/*
■ break문을 반복문을 하나밖에 못 벗어 나네요? : 레이블을 설정하는 break문
반복문의 탈출 기능을 제공하는 break문은 자신이 속한 반복문의 탈출 기능을 제공한다.
그런데 break문이 탈출하는 반복문은 오로지 하나이다. 따라서 일반적인 break문은 중첩된 반복문 전부를 빠져나가지 못한다.

위 예제의 실행결과를 보면 안쪽 반복문에 포함되어 있는 break문이 어디로 벗어나는지를 알 수 있다.
7행의 조건이 처음 true가 되는 때는 i와 j가 모두 2가 되는 순간이다. 만약에 8행의 break문을 통해서 중첩된 반복문
전부를 벗어났다면, 마지막으로 출력이 되는 i와 j의 값은 각각 2가 되어야 한다. 그러나 실행결괄르 보면 5행에 있는 안쪽
반복문만 벗어났음을 알 수 있다. 이렇듯 break문은 자신을 감싸는 반복문 하나만 탈출을 한다.
그런데 프로그램을 구현하다 보면 중첩된 반복문 전부를 벗어나야 할 때도 있다. 그럼 이러한 경우에는 어떻게 구현해야 할까?
break문을 구성할 때 빠져나갈 위치를 명시해 주면 된다.
*/